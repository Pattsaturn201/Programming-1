#include <stdio.h>  
#include <stdlib.h>
#include <time.h>

int main(int argc, char const *argv[])//create the main function 
{
    int n, m;
    printf("Enter a value for the number of rows:\n");//ask the user to introduce values of the rows and columns of both matrices
    scanf("%d",&n);
    printf("Enter a value for the number of columns:\n");
    scanf("%d",&m);

    int matrixA[n][m];//declaration of the matrix because we already have the value of n and m 
    int matrixB[n][m];
    int matrixCtotal[n][m];

    srand(time(NULL));// random function 

    for (int i = 0; i < n; i++)// for function to create the  A and B matrix 
    {
        for (int j = 0; j < m; j++)
        {
            matrixA[i][j]=rand()%100;//random values in every adress of each matrix
        }
        
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            matrixB[i][j]=rand()%100;
        }
        
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            matrixCtotal[i][j]=matrixA[i][j]+matrixB[i][j];
        }
        
    }

    printf("\n Matrix A \n");
    for (int  i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            printf(" %d ",matrixA[i][j]);
        }
        printf("\n");
    }

    printf("\n Matrix B \n");
    for (int  i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            printf(" %d ",matrixB[i][j]);
        }
        printf("\n");
    }

    
    printf("\n Resultant Matrix \n");//printing of every matrix
    for (int  i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            printf(" %d ",matrixCtotal[i][j]);
        }
        printf("\n");
    }





    return 0;
}
